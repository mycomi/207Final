{"version":3,"sources":["firebase/config.js","firebase/firebase.js","components/Home.jsx","components/Login.jsx","components/Reg.jsx","Routes.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","initializeApp","Home","props","state","email","password","messages","message","currentUser","image","comment","logout","bind","auth","onAuthStateChanged","user","setState","firestore","collection","doc","onSnapshot","item","signOut","then","response","this","className","onClick","to","React","Component","Login","onChange","e","target","name","value","onSubmit","preventDefault","signInWithEmailAndPassword","catch","error","htmlFor","type","Reg","action","method","Routes","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79e81bf0.chunk.js","sourcesContent":["const config = {\r\n    // apiKey: process.env.REACT_APP_APIKEY,\r\n    // authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    // databaseURL: process.env.REACT_APP_DATABASEURL,\r\n    // projectId: process.env.REACT_APP_PROJECTID,\r\n    // storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    // messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    // appId: process.env.REACT_APP_APPID,\r\n    // measurementId: process.env.REACT_APP_MEASUREMENTID\r\n\r\n    apiKey: \"AIzaSyCOIIF3x54B5T1gXm7h_iRPBpQIQXVh1lM\",\r\n    authDomain: \"lab7-c0aa6.firebaseapp.com\",\r\n    databaseURL: \"https://lab7-c0aa6.firebaseio.com\",\r\n    projectId: \"lab7-c0aa6\",\r\n    storageBucket: \"lab7-c0aa6.appspot.com\",\r\n    messagingSenderId: \"476851765338\",\r\n    appId: \"1:476851765338:web:4aaa7495404ab7c2df9863\",\r\n    measurementId: \"G-Z0664CHSS6\"\r\n }\r\n  \r\n export default config","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\nimport config from './config'\r\n \r\nif (!firebase.apps.length) {\r\n   firebase.initializeApp(config)\r\n}\r\n \r\nexport default firebase","import React from 'react'\r\nimport 'bulma/css/bulma.css'\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../firebase/firebase'\r\n\r\n\r\n// import Navbar from './Navbar'\r\n// import MessageList from './MessageList'\r\n\r\nclass Home extends React.Component {\r\n\r\n        constructor(props) {\r\n            super(props)\r\n    \r\n            this.state = {\r\n                email : '',\r\n                password : '',\r\n                messages : [],\r\n                message : '',\r\n                currentUser : null,\r\n                image : '',\r\n                comment:''\r\n            }\r\n            this.logout = this.logout.bind(this)\r\n        }\r\n    \r\n        componentDidMount(){\r\n            firebase.auth().onAuthStateChanged(user => {\r\n                if(user){\r\n                    this.setState({\r\n                        currentUser : user\r\n                    })\r\n                    \r\n                    firebase.firestore()\r\n                    .collection('users')\r\n                    .doc(user.email)\r\n                    .collection('messages')\r\n                    .onSnapshot(item => {\r\n                        this.setState({\r\n                            messages: item\r\n                        })\r\n    \r\n                    })\r\n                }\r\n            })\r\n        }\r\n    \r\n        // post = e => {\r\n        //     firebase.firestore()\r\n        //     .collection('users')\r\n        //     .doc(this.state.currentUser.email)\r\n        //     .collection('messages')\r\n        //     .add({\r\n        //         text: this.state.comment,\r\n        //         timestamp: new Date()\r\n        //     })\r\n        // }\r\n    \r\n        // delete = e => {\r\n        //     firebase.firestore()\r\n        //     .collection('users')\r\n        //     .doc(this.state.currentUser.email)\r\n        //     .collection('messages')\r\n        //     .doc(e.target.value)\r\n        //     .delete()\r\n        // }\r\n    \r\n        // onChange = e => {\r\n        //     const {name,value} = e.target\r\n        //     this.setState({\r\n        //         [name]: value\r\n        //     })\r\n        // }\r\n    \r\n        // onSubmit = e => {\r\n        //     e.preventDefault()\r\n        //     const {email,password} = this.state\r\n        //     firebase.auth()\r\n        //         .signInWithEmailAndPassword(email, password)\r\n        //         .then(response => {\r\n        //             this.setState({\r\n        //                 currentUser: response.user                    \r\n        //             })\r\n        //         })\r\n        //         .catch(error => {\r\n        //             this.setState({\r\n        //                 message: error.message\r\n        //             })\r\n        //         })\r\n        // }\r\n    \r\n        logout(){\r\n            firebase.auth().signOut().then(response => {\r\n                this.setState({\r\n                    currentUser : null\r\n                })\r\n            })\r\n        }\r\n    \r\n        render() {\r\n            const {message,currentUser} = this.state\r\n            if (currentUser){\r\n                return(\r\n                    <div>\r\n                    {/* <Navbar username = {currentUser.email} logout = {this.logout}  /> */}\r\n                    {/* <MessageList\r\n                           image={this.state.image}\r\n                           messages={this.state.messages}\r\n                           onChange={this.onChange}\r\n                           post={this.post}\r\n                           delete={this.delete} /> */}\r\n                           <h1> Hi </h1>\r\n                           <button className=\"button is-light\" onClick={this.logout}>\r\n                               Logout\r\n                           </button>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return(\r\n                    // <table>\r\n                    //     <tr className=\"field is-grouped\">\r\n                    //         <div className=\"control\">\r\n                    //             <Link to =\"/login\">\r\n                    //             <button className=\"button is-link\">Login</button>\r\n                    //             </Link>\r\n                    //         </div>\r\n                    //     </tr>\r\n                    //     <tr className=\"field is-grouped\">\r\n                    //         <div className=\"control\">\r\n                    //             <Link to =\"/register\">\r\n                    //             <button className=\"button is-link\">Register</button>\r\n                    //             </Link>\r\n                    //         </div>\r\n                    //     </tr>\r\n                    // </table>\r\n                    <div className=\"control\">\r\n                    <Link to =\"/register\">\r\n                    <button className=\"button is-link\">Register</button>\r\n                    </Link>\r\n\r\n                    <Link to =\"/login\">\r\n                <button className=\"button is-link\">Login</button>\r\n                </Link>\r\n                </div>\r\n                \r\n                    \r\n                )\r\n            }\r\n        }\r\n    \r\n    }\r\nexport default Home","import React from 'react'\r\nimport 'bulma/css/bulma.css'\r\nimport firebase from '../firebase/firebase'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email : '',\r\n            password : '',\r\n            messages : [],\r\n            message : '',\r\n            currentUser : null,\r\n            image : '',\r\n            comment:''\r\n        }\r\n        this.logout = this.logout.bind(this)\r\n    }\r\n\r\n    onChange = e => {\r\n        const {name,value} = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault()\r\n        const {email,password} = this.state\r\n        firebase.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(response => {\r\n                this.setState({\r\n                    currentUser: response.user                    \r\n                })\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    message: error.message\r\n                })\r\n            })\r\n\r\n        \r\n    }\r\n\r\n    logout(){\r\n        firebase.auth().signOut().then(response => {\r\n            this.setState({\r\n                currentUser : null\r\n            })\r\n        })\r\n    }\r\n\r\n\r\nrender() {\r\n\r\n    const {message,currentUser} = this.state\r\n            if (currentUser){\r\n                return (\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                        <button className=\"button is-link\">เข้าสู่เว็บไซต์</button>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            }else{\r\n                return(\r\n                    <section className=\"section container\">\r\n                        <div className=\"columns is-centered\">\r\n                            <div className=\"column is-half\">\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"field\">\r\n                                        <label className=\"label\" htmlFor=\"\">Email</label>\r\n                                        <div className=\"control\">\r\n                                            <input className=\"input\" type=\"email\" name=\"email\" onChange={this.onChange} ></input>\r\n                                        </div>\r\n                                    </div>\r\n        \r\n                                    <div className=\"field\">\r\n                                        <label className=\"label\" htmlFor=\"\">Password</label>\r\n                                        <div className=\"control\">\r\n                                            <input className=\"input\" type=\"password\" name=\"password\" onChange={this.onChange}></input>\r\n                                        </div>\r\n                                    </div>\r\n        \r\n                                    <div className=\"field is-grouped\">\r\n                                        <div className=\"control\">\r\n                                            \r\n                                            <button className=\"button is-link\">Login</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                )\r\n            }\r\n\r\n        \r\n\r\n    }\r\n}\r\nexport default Login\r\n","import React from 'react'\r\nimport 'bulma/css/bulma.css'\r\n\r\nclass Reg extends React.Component {\r\n\r\nrender() {\r\n\r\n        return(\r\n            <section className=\"section container\">\r\n                <div className=\"columns is-centered\">\r\n                    <div className=\"column is-half\">\r\n                        <form onSubmit={this.onSubmit} action=\"/api/users\" method=\"post\">\r\n                            {/* <div className=\"field\">\r\n                                <label className=\"label\" htmlFor=\"\">First Name</label>\r\n                                <div className=\"control\">\r\n                                    <input className=\"input\" type=\"first\" name=\"first\" onChange={this.onChange} ></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label className=\"label\" htmlFor=\"\">Last Name</label>\r\n                                <div className=\"control\">\r\n                                    <input className=\"input\" type=\"last\" name=\"last\" onChange={this.onChange} ></input>\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"field\">\r\n                                <label className=\"label\" htmlFor=\"\">Name</label>\r\n                                <div className=\"control\">\r\n                                    <input className=\"input\" type=\"text\" name=\"name\" onChange={this.onChange} ></input>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label className=\"label\" htmlFor=\"\">Email</label>\r\n                                <div className=\"control\">\r\n                                    <input className=\"input\" type=\"email\" name=\"email\" onChange={this.onChange} ></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field\">\r\n                                <label className=\"label\" htmlFor=\"\">Password</label>\r\n                                <div className=\"control\">\r\n                                    <input className=\"input\" type=\"password\" name=\"password\" onChange={this.onChange}></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"field is-grouped\">\r\n                                <div className=\"control\">\r\n                                    <button className=\"button is-link\">Submit</button>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Reg","import React from 'react';\r\nimport { Router, Route } from 'react-router-dom';\r\n\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Reg from './components/Reg';\r\n\r\nconst Routes = () => (\r\n  // <Router {...props}>\r\n  //   <Route path=\"/\" exact component={Home} />\r\n  //   <Route path=\"/register\" exact component={Reg} />    \r\n  //   <Route path=\"/login\" exact component={Login} />\r\n  // </Router>\r\n  <div>\r\n    <Route path=\"/\" exact component={Home} />\r\n    <Route path=\"/register\" exact component={Reg} />    \r\n    <Route path=\"/login\" exact component={Login} />\r\n\r\n    \r\n\r\n  </div>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { browserHistory } from 'react-router';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport Routes from './Routes';\n\nimport './index.css';\n\nReactDOM.render(\n  // <Routes history={browserHistory} />,\n  <BrowserRouter> <Routes/> </BrowserRouter>,\n  \n  document.getElementById('root')\n);"],"sourceRoot":""}